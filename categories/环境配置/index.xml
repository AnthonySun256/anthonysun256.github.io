<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>环境配置 - 分类 - Anthony's Blog</title><link>https://anthonysun256.github.io/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link><description>环境配置 - 分类 - Anthony's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>originsun@126.com (Anthony)</managingEditor><webMaster>originsun@126.com (Anthony)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 20 Apr 2022 06:14:19 +0000</lastBuildDate><atom:link href="https://anthonysun256.github.io/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" rel="self" type="application/rss+xml"/><item><title>在 limo 中安安装 docker</title><link>https://anthonysun256.github.io/use_docker_in_limo/</link><pubDate>Wed, 20 Apr 2022 06:14:19 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/use_docker_in_limo/</guid><description>1. 安装 Docker 引擎 首先清除旧版本 Docker： 1 $ sudo apt-get remove docker docker-engine docker.io containerd runc 之后使用官方安装脚本进行安装： 1 2 $ curl -fsSL https://get.docker.com -o get-docker.sh $ sudo sh get-docker.sh 将当前用户添加到 docker 用户组，</description></item><item><title>我的 ROS 开发环境</title><link>https://anthonysun256.github.io/my_ros_env/</link><pubDate>Mon, 18 Apr 2022 08:51:43 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/my_ros_env/</guid><description>&lt;p>本文主要介绍我所使用的 ROS 开发环境
我采用这个模式进行开发是受到了这篇文章的启发：&lt;a
href="https://www.allisonthackston.com/articles/vscode-docker-ros2.html"
target="_blank"
rel="noopener noreffer"
>https://www.allisonthackston.com/articles/vscode-docker-ros2.html&lt;/a>&lt;/p></description></item><item><title>在 Docker 中使用 Nvidia 显卡</title><link>https://anthonysun256.github.io/docker_with_nvidia/</link><pubDate>Mon, 18 Apr 2022 07:27:08 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/docker_with_nvidia/</guid><description>&lt;p>作为一名炼丹师，我们经常需要使用 Nvidia 显卡辅助我们加速计算，但是 Docker 并不直接支持访问 Nvidia 显卡，但好在 Nvidia 官方提供了提供了相关 Docker 插件可以让我们直接在容器中访问 Nvidia 显卡&lt;/p></description></item><item><title>Docker Container 代理配置一本通</title><link>https://anthonysun256.github.io/docker-proxy-complete-solution/</link><pubDate>Wed, 26 Jan 2022 06:47:15 +0800</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/docker-proxy-complete-solution/</guid><description>&lt;p>由于一些原因，我们常常需要在开发中使用代理，但是在实践过程中我们发现在 Container 中我们无法直接使用主机配置好的代理。本文将给出不同平台下配置 Container 中的代理的方法。&lt;/p></description></item></channel></rss>