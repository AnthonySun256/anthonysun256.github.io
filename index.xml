<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Anthony's Blog</title><link>https://anthonysun256.github.io/</link><description>一个随意的技术博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>originsun@126.com (Anthony)</managingEditor><webMaster>originsun@126.com (Anthony)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 20 Apr 2022 06:14:19 +0000</lastBuildDate><atom:link href="https://anthonysun256.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>在 limo 中安装 docker</title><link>https://anthonysun256.github.io/use_docker_in_limo/</link><pubDate>Wed, 20 Apr 2022 06:14:19 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/use_docker_in_limo/</guid><description>1. 安装 Docker 引擎 首先清除旧版本 Docker： 1 $ sudo apt-get remove docker docker-engine docker.io containerd runc 之后使用官方安装脚本进行安装： 1 2 $ curl -fsSL https://get.docker.com -o get-docker.sh $ sudo sh get-docker.sh 将当前用户添加到 docker 用户组，</description></item><item><title>我的 ROS 开发环境</title><link>https://anthonysun256.github.io/my_ros_env/</link><pubDate>Mon, 18 Apr 2022 08:51:43 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/my_ros_env/</guid><description>&lt;p>本文主要介绍我所使用的 ROS 开发环境
我采用这个模式进行开发是受到了这篇文章的启发：&lt;a
href="https://www.allisonthackston.com/articles/vscode-docker-ros2.html"
target="_blank"
rel="noopener noreffer"
>https://www.allisonthackston.com/articles/vscode-docker-ros2.html&lt;/a>&lt;/p></description></item><item><title>在 Docker 中使用 Nvidia 显卡</title><link>https://anthonysun256.github.io/docker_with_nvidia/</link><pubDate>Mon, 18 Apr 2022 07:27:08 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/docker_with_nvidia/</guid><description>&lt;p>作为一名炼丹师，我们经常需要使用 Nvidia 显卡辅助我们加速计算，但是 Docker 并不直接支持访问 Nvidia 显卡，但好在 Nvidia 官方提供了提供了相关 Docker 插件可以让我们直接在容器中访问 Nvidia 显卡&lt;/p></description></item><item><title>limo 仿真指南</title><link>https://anthonysun256.github.io/limo_setup/</link><pubDate>Mon, 18 Apr 2022 07:07:07 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/limo_setup/</guid><description><![CDATA[<blockquote>
<p>本文适合有 ROS1 基础和对 Gazebo 有了解的朋友</p>
</blockquote>
<p>松灵机器人LIMO是全球首款集四种运动模态于一体的ROS开发平台，提供了适应场景更广泛、更符合行业应用要求的学习平台，适用于机器人教育、功能研发、产品开发。通过创新性的机械设计，能实现四轮差速、阿克曼、履带型、麦克纳姆轮运动模式的快速切换，可在配套的专业沙盘中快速建立多场景实拟教学和测试，LIMO搭载NVIDIA Jeston Nano、EAI XL2激光雷达、深度相机等高性能传感器配置，可实现精确的自主定位、SLAM建图、路线规划和自主避障、自主倒车入库、红绿灯识别等丰富功能。</p>]]></description></item><item><title>Scout mini 仿真指南</title><link>https://anthonysun256.github.io/scout_mini_sim/</link><pubDate>Sun, 10 Apr 2022 04:37:48 +0000</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/scout_mini_sim/</guid><description><![CDATA[<blockquote>
<p>本文适合有 ROS1 基础与了解 urdf语法 和 gazebo 的朋友</p>
</blockquote>
<p>SCOUT MINI 是一款全地形高速Mini UGV，具有四轮差速驱动、独立悬挂、原地差速自转等特点，得益于自主研发的轻量级动力系统解决方案，SCOUT MINI最大速度高达10KM/H，专为前沿科学实验设计的全能型移动研究平台。</p>]]></description></item><item><title>Docker Container 代理配置一本通</title><link>https://anthonysun256.github.io/docker-proxy-complete-solution/</link><pubDate>Wed, 26 Jan 2022 06:47:15 +0800</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/docker-proxy-complete-solution/</guid><description>&lt;p>由于一些原因，我们常常需要在开发中使用代理，但是在实践过程中我们发现在 Container 中我们无法直接使用主机配置好的代理。本文将给出不同平台下配置 Container 中的代理的方法。&lt;/p></description></item><item><title>Docker配合VSC开发最佳实践</title><link>https://anthonysun256.github.io/docker-with-vsc_best-practice/</link><pubDate>Sun, 23 Jan 2022 16:28:25 +0800</pubDate><author>Anthony</author><guid>https://anthonysun256.github.io/docker-with-vsc_best-practice/</guid><description>前言 为什么我们需要虚拟环境？ 很长时间以来最让我头疼的事情就是配置开发环境，最简单的一个例子是配置深度学习使用的 Python 环境。如果在本机上直接配置 Python</description></item></channel></rss>